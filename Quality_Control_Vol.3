import pygame
import time
import copy

pygame.init()
(width, height) = (700, 500)
screen = pygame.display.set_mode((width, height))
pygame.display.set_caption("Quality Control")
pygame.display.flip()

chips = [pygame.image.load('Chip1.png'), pygame.image.load('Chip2.png'), pygame.image.load('Chip3.png'),
         pygame.image.load('Chip4.png'), pygame.image.load('Chip5.png'), pygame.image.load('Chip6.png')]
brokenOrNot = [0, 1, 1, 0, 0]

clipboard = pygame.image.load('Clipboard.png')
clipboard2 = pygame.image.load('Clipboard2.png')
backdrop = pygame.image.load('Backdrop.png')

for x in range(0, len(chips)):
    chips[x] = pygame.transform.scale(chips[x], (235, 87))
posX, posy = (0, 0)
score = 0
color = [0, 255, 0]
gray = [100, 100, 100]
running = True
mouseDown = False
zeroOne = (0, 1)
OKButton = pygame.Rect(250, 100, 100, 25)
green = [0, 255, 255]
red = [255, 0, 0]
TextFont = pygame.font.SysFont("monospace", 30)
newLevel = True

ApprovedRejected = 0
blur = False

forx = 0
fory = 0

waitTime = 30
wait = 0

while running:
    print(len(chips))
    if wait < waitTime:
        wait += 1
    if score == 5:
        score = 0
    blur = False
    if blur == True:
        screen.fill(gray)
    if newLevel == True:
        posy = 350
        if posX < 350 - (int(chips[score].get_rect().size[0]) / 2):
            print(posX)
            blur = True
            posX += 10
        else:
            newLevel = False
            blur = False
    if ApprovedRejected == 3:
        #clipboard = clipboard2
        if posX < 600 - (int(chips[score].get_rect().size[0]) / 2):
            blur = True
            posX += 10
        else:
            clipboard = clipboard2
            if brokenOrNot[score] == 0:
                score += 1
            if brokenOrNot[score] == 1:
                score += 1
            posX = -100
            posy = -400
            #saveImg = chips[score].copy()
            blur = False
            ApprovedRejected = 0
            newLevel = True

    if wait >= waitTime:

        for forx in range(0, width):
            for fory in range(0, height):
                if forx > 494 and forx < 522:
                    if fory > 332 and fory < 360:
                        print(screen.get_at((forx, fory)))
                        if screen.get_at((forx, fory)) == (1, 255, 1):
                            print ("Green")
                            ApprovedRejected = 3
                            clipboard = clipboard2
                        if screen.get_at((forx, fory)) == (255, 1, 1):
                            print ("Red")
                            ApprovedRejected = 3
        wait = 0

    pygame.display.flip()
    for event in pygame.event.get():
        if event.type == pygame.QUIT:
            running = False
        if event.type == pygame.K_g:
            color = [0,255,0]
        if event.type == pygame.K_r:
            color = [255,0,0]
            print(color)
        if pygame.mouse.get_pressed()[0]:
            mouseDown = True
            if pygame.mouse.get_pos()[0] < 400:
                if pygame.mouse.get_pos()[0] > 300:
                    if pygame.mouse.get_pos()[1] < 200:
                        if pygame.mouse.get_pos()[1] > 100:
                            print("Hola")
                            ApprovedRejected = 1
                    if pygame.mouse.get_pos()[1] < 475:
                        if pygame.mouse.get_pos()[1] > 375:
                            print("Hola2")
                            ApprovedRejected = 2
            clipboard.set_at((pygame.mouse.get_pos()[0], pygame.mouse.get_pos()[1]), color)
            clipboard.set_at((int(pygame.mouse.get_pos()[0]) - 1, int(pygame.mouse.get_pos()[1]) - 1), color)
            clipboard.set_at((int(pygame.mouse.get_pos()[0]), int(pygame.mouse.get_pos()[1]) - 1), color)
            clipboard.set_at((int(pygame.mouse.get_pos()[0]) + 1, int(pygame.mouse.get_pos()[1]) - 1), color)
            clipboard.set_at((int(pygame.mouse.get_pos()[0]) + 1, int(pygame.mouse.get_pos()[1])), color)
            clipboard.set_at((int(pygame.mouse.get_pos()[0]) - 1, int(pygame.mouse.get_pos()[1])), color)
            clipboard.set_at((int(pygame.mouse.get_pos()[0]), int(pygame.mouse.get_pos()[1]) + 1), color)
            clipboard.set_at((int(pygame.mouse.get_pos()[0]) + 1, int(pygame.mouse.get_pos()[1] + 1)), color)
            clipboard.set_at((int(pygame.mouse.get_pos()[0]) + 1, int(pygame.mouse.get_pos()[1]) - 1), color)
        else:
            mouseDown = False
        if pygame.mouse.get_pressed()[1]:
            color = [255,0,0]
            mouseDown = True
            if pygame.mouse.get_pos()[0] < 400:
                if pygame.mouse.get_pos()[0] > 300:
                    if pygame.mouse.get_pos()[1] < 200:
                        if pygame.mouse.get_pos()[1] > 100:
                            print("Hola")
                            ApprovedRejected = 1
                    if pygame.mouse.get_pos()[1] < 475:
                        if pygame.mouse.get_pos()[1] > 375:
                            print("Hola2")
                            ApprovedRejected = 2
            clipboard.set_at((pygame.mouse.get_pos()[0], pygame.mouse.get_pos()[1]), red)
            clipboard.set_at((int(pygame.mouse.get_pos()[0]) - 1, int(pygame.mouse.get_pos()[1]) - 1), red)
            clipboard.set_at((int(pygame.mouse.get_pos()[0]), int(pygame.mouse.get_pos()[1]) - 1), red)
            clipboard.set_at((int(pygame.mouse.get_pos()[0]) + 1, int(pygame.mouse.get_pos()[1]) - 1), red)
            clipboard.set_at((int(pygame.mouse.get_pos()[0]) + 1, int(pygame.mouse.get_pos()[1])), red)
            clipboard.set_at((int(pygame.mouse.get_pos()[0]) - 1, int(pygame.mouse.get_pos()[1])), red)
            clipboard.set_at((int(pygame.mouse.get_pos()[0]), int(pygame.mouse.get_pos()[1]) + 1), red)
            clipboard.set_at((int(pygame.mouse.get_pos()[0]) + 1, int(pygame.mouse.get_pos()[1] + 1)), red)
            clipboard.set_at((int(pygame.mouse.get_pos()[0]) + 1, int(pygame.mouse.get_pos()[1]) - 1), red)
        else:
            mouseDown = False
    pygame.display.flip()
    if blur:
        #screen.fill(gray)
        screen.blit(backdrop,(0,0))
    screen.blit(chips[score], (posX, posy))
    screen.blit(clipboard, (width - int(clipboard.get_rect().size[0]), int(height - clipboard.get_rect().size[1])))
    #No = TextFont.render("Next", 1, gray)
    #pygame.draw.rect(screen, green, (300, 375, 100, 100))
    #screen.blit(No, (300, 375))
